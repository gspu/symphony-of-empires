cmake_minimum_required(VERSION 3.5.1)

project(SymphonyOfEmpires)
set(CMAKE_BINARY_DIR ${CMAKE_SOURCE_DIR}/src)
set(PROJECT_SOURCE_DIR ${CMAKE_SOURCE_DIR}/src)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread")

IF(WIN32)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Dwindows")
ELSE()
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Dunix")
ENDIF()

# Workaround for clang (see https://bugs.launchpad.net/ubuntu/+source/libsdl2-ttf/+bug/1872023)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -I/usr/include/SDL2")
link_directories(/usr/local/lib)

# Helps github workflows to not die
IF(UNIT_TEST)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DUNIT_TEST")
ENDIF()

include_directories("${PROJECT_SOURCE_DIR}")

file(GLOB MAIN_SOURCES "${PROJECT_SOURCE_DIR}/*.cpp")
file(GLOB AI_SOURCES "${PROJECT_SOURCE_DIR}/simple_ai/*.cpp")
file(GLOB CLIENT_SOURCES "${PROJECT_SOURCE_DIR}/client/*.cpp")
file(GLOB RENDER_SOURCES "${PROJECT_SOURCE_DIR}/client/render/*.cpp")
file(GLOB INTERFACE_SOURCES "${PROJECT_SOURCE_DIR}/client/interface/*.cpp")
add_executable(SymphonyOfEmpiresClient ${MAIN_SOURCES} ${CLIENT_SOURCES} ${AI_SOURCES} ${RENDER_SOURCES} ${INTERFACE_SOURCES})
IF(WIN32)
	target_link_libraries(SymphonyOfEmpiresClient PUBLIC glew32 opengl32 glu32 ws2_32 winpthread intl wsock32 assimp)
ELSE()
	target_link_libraries(SymphonyOfEmpiresClient PUBLIC GL GLU GLEW SDL2main assimp)
ENDIF()
target_link_libraries(SymphonyOfEmpiresClient PUBLIC SDL2 SDL2_ttf m z tbb stdc++)

file(GLOB SERVER_SOURCES "${PROJECT_SOURCE_DIR}/server/*.cpp")
file(GLOB SERVER_AI_SOURCES "${PROJECT_SOURCE_DIR}/server/ai/*.cpp")
add_executable(SymphonyOfEmpiresServer ${MAIN_SOURCES} ${SERVER_SOURCES} ${SERVER_AI_SOURCES})
IF(WIN32)
	target_link_libraries(SymphonyOfEmpiresServer PUBLIC ws2_32 winpthread wsock32 intl)
ENDIF()
target_link_libraries(SymphonyOfEmpiresServer PUBLIC stdc++ m z tbb)

IF(NOT MINGW AND NOT MSYS)
	IF(lua54)
		target_link_libraries(SymphonyOfEmpiresServer PUBLIC lua5.4)
		set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DLUA54")
		message("Making with Lua 5.4")
	ELSE()
		target_link_libraries(SymphonyOfEmpiresServer PUBLIC lua5.3)
		message("Making with Lua 5.3")
	ENDIF()
# msys is simple - just lua, no lua5.4 or lua5.3
ELSE()
	target_link_libraries(SymphonyOfEmpiresServer PUBLIC lua)
	message("Making with unknown lua")
ENDIF()
